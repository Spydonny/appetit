// Mocks generated by Mockito 5.4.6 from annotations
// in appetite_app/test/unit/app_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i8;

import 'package:flutter/foundation.dart' as _i4;
import 'package:flutter/rendering.dart' as _i2;
import 'package:flutter/services.dart' as _i3;
import 'package:flutter/src/widgets/editable_text.dart' as _i5;
import 'package:flutter/src/widgets/framework.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTextSelection_0 extends _i1.SmartFake implements _i2.TextSelection {
  _FakeTextSelection_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTextEditingValue_1 extends _i1.SmartFake
    implements _i3.TextEditingValue {
  _FakeTextEditingValue_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTextSpan_2 extends _i1.SmartFake implements _i2.TextSpan {
  _FakeTextSpan_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [TextEditingController].
///
/// See the documentation for Mockito's code generation for more information.
class MockTextEditingController extends _i1.Mock
    implements _i5.TextEditingController {
  MockTextEditingController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get text =>
      (super.noSuchMethod(
            Invocation.getter(#text),
            returnValue: _i6.dummyValue<String>(this, Invocation.getter(#text)),
          )
          as String);

  @override
  _i2.TextSelection get selection =>
      (super.noSuchMethod(
            Invocation.getter(#selection),
            returnValue: _FakeTextSelection_0(
              this,
              Invocation.getter(#selection),
            ),
          )
          as _i2.TextSelection);

  @override
  set text(String? newText) => super.noSuchMethod(
    Invocation.setter(#text, newText),
    returnValueForMissingStub: null,
  );

  @override
  set value(_i3.TextEditingValue? newValue) => super.noSuchMethod(
    Invocation.setter(#value, newValue),
    returnValueForMissingStub: null,
  );

  @override
  set selection(_i2.TextSelection? newSelection) => super.noSuchMethod(
    Invocation.setter(#selection, newSelection),
    returnValueForMissingStub: null,
  );

  @override
  _i3.TextEditingValue get value =>
      (super.noSuchMethod(
            Invocation.getter(#value),
            returnValue: _FakeTextEditingValue_1(
              this,
              Invocation.getter(#value),
            ),
          )
          as _i3.TextEditingValue);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i2.TextSpan buildTextSpan({
    required _i7.BuildContext? context,
    _i2.TextStyle? style,
    required bool? withComposing,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#buildTextSpan, [], {
              #context: context,
              #style: style,
              #withComposing: withComposing,
            }),
            returnValue: _FakeTextSpan_2(
              this,
              Invocation.method(#buildTextSpan, [], {
                #context: context,
                #style: style,
                #withComposing: withComposing,
              }),
            ),
          )
          as _i2.TextSpan);

  @override
  void clear() => super.noSuchMethod(
    Invocation.method(#clear, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearComposing() => super.noSuchMethod(
    Invocation.method(#clearComposing, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
